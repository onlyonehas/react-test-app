ba47291e0697fb76af3d96353296361e
"use strict";

var _interopRequireWildcard = require("/home/hassan/Sites/react-basic-app-robofriends/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _constants = require("./constants");

var reducers = _interopRequireWildcard(require("./reducers"));

var actions = _interopRequireWildcard(require("./actions"));

describe('searchRobots', () => {
  const intialStateSearch = {
    searchField: ''
  };
  it('it should return the intial state', () => {
    expect(reducers.searchRobots(undefined, {})).toEqual({
      searchField: ''
    });
  });
  it('should handle the CHANGE_SEARCH_FIELD', () => {
    expect(reducers.searchRobots(intialStateSearch, {
      type: _constants.CHANGE_SEARCH_FIELD,
      payload: 'abc'
    })).toEqual({
      searchField: 'abc'
    });
  });
});
describe('requestRobots', () => {
  const intialStateRobots = {
    robots: [],
    isPending: false
  };
  it('should return the intial state', () => {
    expect(reducers.requestRobots(undefined, {})).toEqual(intialStateRobots);
  });
  it('should handle REQUEST_ROBOTS_PENDING action', () => {
    expect(reducers.requestRobots(intialStateRobots, {
      type: _constants.REQUEST_ROBOTS_PENDING
    })).toEqual({
      robots: [],
      isPending: true
    });
  });
  it('should handle REQUEST_ROBOTS_SUCCESS action', () => {
    expect(reducers.requestRobots(intialStateRobots, {
      type: _constants.REQUEST_ROBOTS_SUCCESS,
      payload: [{
        id: '123',
        name: 'test',
        email: 'test@gmail.com'
      }]
    })).toEqual({
      robots: [{
        id: '123',
        name: 'test',
        email: 'test@gmail.com'
      }],
      isPending: true
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZHVjZXJzLnRlc3QuanMiXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJpbnRpYWxTdGF0ZVNlYXJjaCIsInNlYXJjaEZpZWxkIiwiaXQiLCJleHBlY3QiLCJyZWR1Y2VycyIsInNlYXJjaFJvYm90cyIsInVuZGVmaW5lZCIsInRvRXF1YWwiLCJ0eXBlIiwiQ0hBTkdFX1NFQVJDSF9GSUVMRCIsInBheWxvYWQiLCJpbnRpYWxTdGF0ZVJvYm90cyIsInJvYm90cyIsImlzUGVuZGluZyIsInJlcXVlc3RSb2JvdHMiLCJSRVFVRVNUX1JPQk9UU19QRU5ESU5HIiwiUkVRVUVTVF9ST0JPVFNfU1VDQ0VTUyIsImlkIiwibmFtZSIsImVtYWlsIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBUUE7O0FBQ0E7O0FBRUFBLFFBQVEsQ0FBQyxjQUFELEVBQWlCLE1BQUs7QUFDN0IsUUFBTUMsaUJBQWlCLEdBQUc7QUFDekJDLElBQUFBLFdBQVcsRUFBRTtBQURZLEdBQTFCO0FBSUFDLEVBQUFBLEVBQUUsQ0FBQyxtQ0FBRCxFQUFzQyxNQUFLO0FBQzVDQyxJQUFBQSxNQUFNLENBQUNDLFFBQVEsQ0FBQ0MsWUFBVCxDQUFzQkMsU0FBdEIsRUFBaUMsRUFBakMsQ0FBRCxDQUFOLENBQ0NDLE9BREQsQ0FDUztBQUFDTixNQUFBQSxXQUFXLEVBQUc7QUFBZixLQURUO0FBRUEsR0FIQyxDQUFGO0FBS0FDLEVBQUFBLEVBQUUsQ0FBQyx1Q0FBRCxFQUEwQyxNQUFLO0FBQ2hEQyxJQUFBQSxNQUFNLENBQUNDLFFBQVEsQ0FBQ0MsWUFBVCxDQUFzQkwsaUJBQXRCLEVBQXlDO0FBQy9DUSxNQUFBQSxJQUFJLEVBQUVDLDhCQUR5QztBQUUvQ0MsTUFBQUEsT0FBTyxFQUFFO0FBRnNDLEtBQXpDLENBQUQsQ0FBTixDQUlJSCxPQUpKLENBSVk7QUFDWE4sTUFBQUEsV0FBVyxFQUFFO0FBREYsS0FKWjtBQU9BLEdBUkMsQ0FBRjtBQVNBLENBbkJPLENBQVI7QUFxQkFGLFFBQVEsQ0FBQyxlQUFELEVBQWtCLE1BQU07QUFDL0IsUUFBTVksaUJBQWlCLEdBQUc7QUFDekJDLElBQUFBLE1BQU0sRUFBRSxFQURpQjtBQUV6QkMsSUFBQUEsU0FBUyxFQUFFO0FBRmMsR0FBMUI7QUFLQVgsRUFBQUEsRUFBRSxDQUFDLGdDQUFELEVBQW1DLE1BQUs7QUFDekNDLElBQUFBLE1BQU0sQ0FBQ0MsUUFBUSxDQUFDVSxhQUFULENBQXVCUixTQUF2QixFQUFrQyxFQUFsQyxDQUFELENBQU4sQ0FBOENDLE9BQTlDLENBQXNESSxpQkFBdEQ7QUFDQSxHQUZDLENBQUY7QUFJQVQsRUFBQUEsRUFBRSxDQUFDLDZDQUFELEVBQWdELE1BQUs7QUFDdERDLElBQUFBLE1BQU0sQ0FBQ0MsUUFBUSxDQUFDVSxhQUFULENBQXVCSCxpQkFBdkIsRUFBMEM7QUFDaERILE1BQUFBLElBQUksRUFBRU87QUFEMEMsS0FBMUMsQ0FBRCxDQUFOLENBRUlSLE9BRkosQ0FFWTtBQUNYSyxNQUFBQSxNQUFNLEVBQUUsRUFERztBQUVYQyxNQUFBQSxTQUFTLEVBQUU7QUFGQSxLQUZaO0FBTUEsR0FQQyxDQUFGO0FBU0FYLEVBQUFBLEVBQUUsQ0FBQyw2Q0FBRCxFQUFnRCxNQUFLO0FBQ3REQyxJQUFBQSxNQUFNLENBQUNDLFFBQVEsQ0FBQ1UsYUFBVCxDQUF1QkgsaUJBQXZCLEVBQTBDO0FBQ2hESCxNQUFBQSxJQUFJLEVBQUVRLGlDQUQwQztBQUVoRE4sTUFBQUEsT0FBTyxFQUFFLENBQUM7QUFDVE8sUUFBQUEsRUFBRSxFQUFFLEtBREs7QUFFVEMsUUFBQUEsSUFBSSxFQUFFLE1BRkc7QUFHVEMsUUFBQUEsS0FBSyxFQUFFO0FBSEUsT0FBRDtBQUZ1QyxLQUExQyxDQUFELENBQU4sQ0FPSVosT0FQSixDQU9ZO0FBQ1hLLE1BQUFBLE1BQU0sRUFBRSxDQUFDO0FBQ1JLLFFBQUFBLEVBQUUsRUFBRSxLQURJO0FBRVJDLFFBQUFBLElBQUksRUFBRSxNQUZFO0FBR1JDLFFBQUFBLEtBQUssRUFBRTtBQUhDLE9BQUQsQ0FERztBQU1YTixNQUFBQSxTQUFTLEVBQUU7QUFOQSxLQVBaO0FBZUEsR0FoQkMsQ0FBRjtBQWlCQSxDQXBDTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgXG4gICAgQ0hBTkdFX1NFQVJDSF9GSUVMRCxcbiAgICBSRVFVRVNUX1JPQk9UU19QRU5ESU5HLFxuICAgIFJFUVVFU1RfUk9CT1RTX1NVQ0NFU1MsXG4gICAgUkVRVUVTVF9ST0JPVFNfRkFJTEVEIFxuXG59IGZyb20gJy4vY29uc3RhbnRzJ1xuXG5pbXBvcnQgKiBhcyByZWR1Y2VycyBmcm9tICcuL3JlZHVjZXJzJ1xuaW1wb3J0ICogYXMgYWN0aW9ucyBmcm9tICcuL2FjdGlvbnMnXG5cbmRlc2NyaWJlKCdzZWFyY2hSb2JvdHMnLCAoKSA9Pntcblx0Y29uc3QgaW50aWFsU3RhdGVTZWFyY2ggPSB7XG5cdFx0c2VhcmNoRmllbGQ6ICcnXG5cdH1cblxuXHRpdCgnaXQgc2hvdWxkIHJldHVybiB0aGUgaW50aWFsIHN0YXRlJywgKCkgPT57XG5cdFx0ZXhwZWN0KHJlZHVjZXJzLnNlYXJjaFJvYm90cyh1bmRlZmluZWQsIHt9KSlcblx0XHQudG9FcXVhbCh7c2VhcmNoRmllbGQgOiAnJ30pXG5cdH0pXG5cblx0aXQoJ3Nob3VsZCBoYW5kbGUgdGhlIENIQU5HRV9TRUFSQ0hfRklFTEQnLCAoKSA9Pntcblx0XHRleHBlY3QocmVkdWNlcnMuc2VhcmNoUm9ib3RzKGludGlhbFN0YXRlU2VhcmNoLCB7XG5cdFx0XHR0eXBlOiBDSEFOR0VfU0VBUkNIX0ZJRUxELFxuXHRcdFx0cGF5bG9hZDogJ2FiYydcblxuXHRcdH0pKS50b0VxdWFsKHtcblx0XHRcdHNlYXJjaEZpZWxkOiAnYWJjJ1xuXHRcdH0pXG5cdH0pXG59KVxuXG5kZXNjcmliZSgncmVxdWVzdFJvYm90cycsICgpID0+IHtcblx0Y29uc3QgaW50aWFsU3RhdGVSb2JvdHMgPSB7XG5cdFx0cm9ib3RzOiBbXSxcblx0XHRpc1BlbmRpbmc6IGZhbHNlXG5cdH1cblxuXHRpdCgnc2hvdWxkIHJldHVybiB0aGUgaW50aWFsIHN0YXRlJywgKCkgPT57XG5cdFx0ZXhwZWN0KHJlZHVjZXJzLnJlcXVlc3RSb2JvdHModW5kZWZpbmVkLCB7fSkpLnRvRXF1YWwoaW50aWFsU3RhdGVSb2JvdHMpXG5cdH0pXG5cblx0aXQoJ3Nob3VsZCBoYW5kbGUgUkVRVUVTVF9ST0JPVFNfUEVORElORyBhY3Rpb24nLCAoKSA9Pntcblx0XHRleHBlY3QocmVkdWNlcnMucmVxdWVzdFJvYm90cyhpbnRpYWxTdGF0ZVJvYm90cywge1xuXHRcdFx0dHlwZTogUkVRVUVTVF9ST0JPVFNfUEVORElORyxcblx0XHR9KSkudG9FcXVhbCh7XG5cdFx0XHRyb2JvdHM6IFtdLFxuXHRcdFx0aXNQZW5kaW5nOiB0cnVlXG5cdFx0fSlcblx0fSlcblxuXHRpdCgnc2hvdWxkIGhhbmRsZSBSRVFVRVNUX1JPQk9UU19TVUNDRVNTIGFjdGlvbicsICgpID0+e1xuXHRcdGV4cGVjdChyZWR1Y2Vycy5yZXF1ZXN0Um9ib3RzKGludGlhbFN0YXRlUm9ib3RzLCB7XG5cdFx0XHR0eXBlOiBSRVFVRVNUX1JPQk9UU19TVUNDRVNTLFxuXHRcdFx0cGF5bG9hZDogW3tcblx0XHRcdFx0aWQ6ICcxMjMnLCBcblx0XHRcdFx0bmFtZTogJ3Rlc3QnLFxuXHRcdFx0XHRlbWFpbDogJ3Rlc3RAZ21haWwuY29tJ1xuXHRcdFx0fV1cblx0XHR9KSkudG9FcXVhbCh7XG5cdFx0XHRyb2JvdHM6IFt7XG5cdFx0XHRcdGlkOiAnMTIzJywgXG5cdFx0XHRcdG5hbWU6ICd0ZXN0Jyxcblx0XHRcdFx0ZW1haWw6ICd0ZXN0QGdtYWlsLmNvbSdcblx0XHRcdH1dLFxuXHRcdFx0aXNQZW5kaW5nOiB0cnVlXG5cdFx0fSlcblx0fSlcbn0pXHQiXX0=