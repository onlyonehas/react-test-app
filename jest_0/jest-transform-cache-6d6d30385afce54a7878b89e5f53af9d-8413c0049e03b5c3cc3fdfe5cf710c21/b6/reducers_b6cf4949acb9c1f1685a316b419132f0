c7e24accc3de6e8f7278156b02fcb2c4
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.requestRobots = exports.searchRobots = void 0;

var _constants = require("./constants");

const initialState = {
  searchField: ''
};

const searchRobots = (state = initialState, action = {}) => {
  switch (action.type) {
    case _constants.CHANGE_SEARCH_FIELD:
      return Object.assign({}, state, {
        searchField: action.payload
      });

    default:
      return state;
  }
};

exports.searchRobots = searchRobots;
const initialStateRobots = {
  isPending: true,
  robots: [],
  error: ''
};

const requestRobots = (state = initialStateRobots, action = {}) => {
  switch (action.type) {
    case _constants.REQUEST_ROBOTS_PENDING:
      return Object.assign({}, state, {
        isPending: true
      });

    case _constants.REQUEST_ROBOTS_SUCCESS:
      return Object.assign({}, state, {
        robots: action.payload,
        isPending: false
      });

    case _constants.REQUEST_ROBOTS_FAILED:
      return Object.assign({}, state, {
        error: action.payload,
        isPending: false
      });

    default:
      return state;
  }
};

exports.requestRobots = requestRobots;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZHVjZXJzLmpzIl0sIm5hbWVzIjpbImluaXRpYWxTdGF0ZSIsInNlYXJjaEZpZWxkIiwic2VhcmNoUm9ib3RzIiwic3RhdGUiLCJhY3Rpb24iLCJ0eXBlIiwiQ0hBTkdFX1NFQVJDSF9GSUVMRCIsIk9iamVjdCIsImFzc2lnbiIsInBheWxvYWQiLCJpbml0aWFsU3RhdGVSb2JvdHMiLCJpc1BlbmRpbmciLCJyb2JvdHMiLCJlcnJvciIsInJlcXVlc3RSb2JvdHMiLCJSRVFVRVNUX1JPQk9UU19QRU5ESU5HIiwiUkVRVUVTVF9ST0JPVFNfU1VDQ0VTUyIsIlJFUVVFU1RfUk9CT1RTX0ZBSUxFRCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQVNBLE1BQU1BLFlBQVksR0FBRztBQUNqQkMsRUFBQUEsV0FBVyxFQUFFO0FBREksQ0FBckI7O0FBSU8sTUFBTUMsWUFBWSxHQUFHLENBQUNDLEtBQUssR0FBQ0gsWUFBUCxFQUFvQkksTUFBTSxHQUFDLEVBQTNCLEtBQWtDO0FBQzFELFVBQU9BLE1BQU0sQ0FBQ0MsSUFBZDtBQUNJLFNBQUtDLDhCQUFMO0FBQ1EsYUFBT0MsTUFBTSxDQUFDQyxNQUFQLENBQWMsRUFBZCxFQUFpQkwsS0FBakIsRUFBd0I7QUFBQ0YsUUFBQUEsV0FBVyxFQUFFRyxNQUFNLENBQUNLO0FBQXJCLE9BQXhCLENBQVA7O0FBQ1I7QUFDSSxhQUFPTixLQUFQO0FBSlI7QUFNSCxDQVBNOzs7QUFTUCxNQUFNTyxrQkFBa0IsR0FBRztBQUN2QkMsRUFBQUEsU0FBUyxFQUFFLElBRFk7QUFFdkJDLEVBQUFBLE1BQU0sRUFBRSxFQUZlO0FBR3ZCQyxFQUFBQSxLQUFLLEVBQUU7QUFIZ0IsQ0FBM0I7O0FBTU8sTUFBTUMsYUFBYSxHQUFHLENBQUNYLEtBQUssR0FBQ08sa0JBQVAsRUFBMkJOLE1BQU0sR0FBQyxFQUFsQyxLQUF5QztBQUNsRSxVQUFPQSxNQUFNLENBQUNDLElBQWQ7QUFDSSxTQUFLVSxpQ0FBTDtBQUNJLGFBQU9SLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjLEVBQWQsRUFBa0JMLEtBQWxCLEVBQXlCO0FBQUNRLFFBQUFBLFNBQVMsRUFBRztBQUFiLE9BQXpCLENBQVA7O0FBRUosU0FBS0ssaUNBQUw7QUFDSSxhQUFPVCxNQUFNLENBQUNDLE1BQVAsQ0FBYyxFQUFkLEVBQWtCTCxLQUFsQixFQUF5QjtBQUFDUyxRQUFBQSxNQUFNLEVBQUVSLE1BQU0sQ0FBQ0ssT0FBaEI7QUFBeUJFLFFBQUFBLFNBQVMsRUFBRTtBQUFwQyxPQUF6QixDQUFQOztBQUVKLFNBQUtNLGdDQUFMO0FBQ0ksYUFBT1YsTUFBTSxDQUFDQyxNQUFQLENBQWMsRUFBZCxFQUFtQkwsS0FBbkIsRUFBMEI7QUFBQ1UsUUFBQUEsS0FBSyxFQUFHVCxNQUFNLENBQUNLLE9BQWhCO0FBQXlCRSxRQUFBQSxTQUFTLEVBQUU7QUFBcEMsT0FBMUIsQ0FBUDs7QUFFSjtBQUNJLGFBQU9SLEtBQVA7QUFYUjtBQWFILENBZE0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBcbiAgICBDSEFOR0VfU0VBUkNIX0ZJRUxELFxuICAgIFJFUVVFU1RfUk9CT1RTX1BFTkRJTkcsXG4gICAgUkVRVUVTVF9ST0JPVFNfU1VDQ0VTUyxcbiAgICBSRVFVRVNUX1JPQk9UU19GQUlMRUQgXG5cbn0gZnJvbSAnLi9jb25zdGFudHMnO1xuXG5cbmNvbnN0IGluaXRpYWxTdGF0ZSA9IHtcbiAgICBzZWFyY2hGaWVsZDogJydcbn1cblxuZXhwb3J0IGNvbnN0IHNlYXJjaFJvYm90cyA9IChzdGF0ZT1pbml0aWFsU3RhdGUsYWN0aW9uPXt9KSA9PiB7XG4gICAgc3dpdGNoKGFjdGlvbi50eXBlKSB7XG4gICAgICAgIGNhc2UgQ0hBTkdFX1NFQVJDSF9GSUVMRDpcbiAgICAgICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSxzdGF0ZSwge3NlYXJjaEZpZWxkOiBhY3Rpb24ucGF5bG9hZH0pO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHN0YXRlO1xuICAgIH1cbn0gICBcblxuY29uc3QgaW5pdGlhbFN0YXRlUm9ib3RzID0ge1xuICAgIGlzUGVuZGluZzogdHJ1ZSwgXG4gICAgcm9ib3RzOiBbXSwgXG4gICAgZXJyb3I6ICcnXG59XG5cbmV4cG9ydCBjb25zdCByZXF1ZXN0Um9ib3RzID0gKHN0YXRlPWluaXRpYWxTdGF0ZVJvYm90cywgYWN0aW9uPXt9KSA9PiB7XG4gICAgc3dpdGNoKGFjdGlvbi50eXBlKXtcbiAgICAgICAgY2FzZSBSRVFVRVNUX1JPQk9UU19QRU5ESU5HOlxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCB7aXNQZW5kaW5nIDogdHJ1ZX0pXG4gICAgICAgIFxuICAgICAgICBjYXNlIFJFUVVFU1RfUk9CT1RTX1NVQ0NFU1M6XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsIHtyb2JvdHM6IGFjdGlvbi5wYXlsb2FkLCBpc1BlbmRpbmc6IGZhbHNlfSlcbiAgICBcbiAgICAgICAgY2FzZSBSRVFVRVNUX1JPQk9UU19GQUlMRUQ6XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSAsIHN0YXRlLCB7ZXJyb3IgOiBhY3Rpb24ucGF5bG9hZCAsaXNQZW5kaW5nOiBmYWxzZX0pXG4gICAgICAgIFxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHN0YXRlOyBcbiAgICB9XG59Il19