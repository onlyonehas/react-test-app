02b48fd217e23072e8daaf5062a6c3db
"use strict";

var _interopRequireWildcard = require("/home/hassan/Sites/react-basic-app-robofriends/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _constants = require("./constants");

var reducers = _interopRequireWildcard(require("./reducers"));

var actions = _interopRequireWildcard(require("./actions"));

describe('searchRobots', () => {
  const intialStateSearch = {
    searchField: ''
  };
  it('it should return the intial state', () => {
    expect(reducers.searchRobots(undefined, {})).toEqual({
      searchField: ''
    });
  });
  it('should handle the CHANGE_SEARCH_FIELD', () => {
    expect(reducers.searchRobots(intialStateSearch, {
      type: _constants.CHANGE_SEARCH_FIELD,
      payload: 'abc'
    })).toEqual({
      searchField: 'abc'
    });
  });
});
describe('requestRobots', () => {
  const intialStateRobots = {
    robots: [],
    isPending: true
  };
  it('it should return the intial state', () => {
    expect(reducers.requestRobots(undefined, {})).toEqual({
      intialStateRobots
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZHVjZXJzLnRlc3QuanMiXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJpbnRpYWxTdGF0ZVNlYXJjaCIsInNlYXJjaEZpZWxkIiwiaXQiLCJleHBlY3QiLCJyZWR1Y2VycyIsInNlYXJjaFJvYm90cyIsInVuZGVmaW5lZCIsInRvRXF1YWwiLCJ0eXBlIiwiQ0hBTkdFX1NFQVJDSF9GSUVMRCIsInBheWxvYWQiLCJpbnRpYWxTdGF0ZVJvYm90cyIsInJvYm90cyIsImlzUGVuZGluZyIsInJlcXVlc3RSb2JvdHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFRQTs7QUFDQTs7QUFFQUEsUUFBUSxDQUFDLGNBQUQsRUFBaUIsTUFBSztBQUM3QixRQUFNQyxpQkFBaUIsR0FBRztBQUN6QkMsSUFBQUEsV0FBVyxFQUFFO0FBRFksR0FBMUI7QUFJQUMsRUFBQUEsRUFBRSxDQUFDLG1DQUFELEVBQXNDLE1BQUs7QUFDNUNDLElBQUFBLE1BQU0sQ0FBQ0MsUUFBUSxDQUFDQyxZQUFULENBQXNCQyxTQUF0QixFQUFpQyxFQUFqQyxDQUFELENBQU4sQ0FDQ0MsT0FERCxDQUNTO0FBQUNOLE1BQUFBLFdBQVcsRUFBRztBQUFmLEtBRFQ7QUFFQSxHQUhDLENBQUY7QUFLQUMsRUFBQUEsRUFBRSxDQUFDLHVDQUFELEVBQTBDLE1BQUs7QUFDaERDLElBQUFBLE1BQU0sQ0FBQ0MsUUFBUSxDQUFDQyxZQUFULENBQXNCTCxpQkFBdEIsRUFBeUM7QUFDL0NRLE1BQUFBLElBQUksRUFBRUMsOEJBRHlDO0FBRS9DQyxNQUFBQSxPQUFPLEVBQUU7QUFGc0MsS0FBekMsQ0FBRCxDQUFOLENBSUlILE9BSkosQ0FJWTtBQUNYTixNQUFBQSxXQUFXLEVBQUU7QUFERixLQUpaO0FBT0EsR0FSQyxDQUFGO0FBU0EsQ0FuQk8sQ0FBUjtBQXFCQUYsUUFBUSxDQUFDLGVBQUQsRUFBa0IsTUFBTTtBQUMvQixRQUFNWSxpQkFBaUIsR0FBRztBQUN6QkMsSUFBQUEsTUFBTSxFQUFFLEVBRGlCO0FBRXpCQyxJQUFBQSxTQUFTLEVBQUU7QUFGYyxHQUExQjtBQUtBWCxFQUFBQSxFQUFFLENBQUMsbUNBQUQsRUFBc0MsTUFBSztBQUM1Q0MsSUFBQUEsTUFBTSxDQUFDQyxRQUFRLENBQUNVLGFBQVQsQ0FBdUJSLFNBQXZCLEVBQWtDLEVBQWxDLENBQUQsQ0FBTixDQUNDQyxPQURELENBQ1M7QUFBQ0ksTUFBQUE7QUFBRCxLQURUO0FBRUEsR0FIQyxDQUFGO0FBSUEsQ0FWTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgXG4gICAgQ0hBTkdFX1NFQVJDSF9GSUVMRCxcbiAgICBSRVFVRVNUX1JPQk9UU19QRU5ESU5HLFxuICAgIFJFUVVFU1RfUk9CT1RTX1NVQ0NFU1MsXG4gICAgUkVRVUVTVF9ST0JPVFNfRkFJTEVEIFxuXG59IGZyb20gJy4vY29uc3RhbnRzJ1xuXG5pbXBvcnQgKiBhcyByZWR1Y2VycyBmcm9tICcuL3JlZHVjZXJzJ1xuaW1wb3J0ICogYXMgYWN0aW9ucyBmcm9tICcuL2FjdGlvbnMnXG5cbmRlc2NyaWJlKCdzZWFyY2hSb2JvdHMnLCAoKSA9Pntcblx0Y29uc3QgaW50aWFsU3RhdGVTZWFyY2ggPSB7XG5cdFx0c2VhcmNoRmllbGQ6ICcnXG5cdH1cblxuXHRpdCgnaXQgc2hvdWxkIHJldHVybiB0aGUgaW50aWFsIHN0YXRlJywgKCkgPT57XG5cdFx0ZXhwZWN0KHJlZHVjZXJzLnNlYXJjaFJvYm90cyh1bmRlZmluZWQsIHt9KSlcblx0XHQudG9FcXVhbCh7c2VhcmNoRmllbGQgOiAnJ30pXG5cdH0pXG5cblx0aXQoJ3Nob3VsZCBoYW5kbGUgdGhlIENIQU5HRV9TRUFSQ0hfRklFTEQnLCAoKSA9Pntcblx0XHRleHBlY3QocmVkdWNlcnMuc2VhcmNoUm9ib3RzKGludGlhbFN0YXRlU2VhcmNoLCB7XG5cdFx0XHR0eXBlOiBDSEFOR0VfU0VBUkNIX0ZJRUxELFxuXHRcdFx0cGF5bG9hZDogJ2FiYydcblxuXHRcdH0pKS50b0VxdWFsKHtcblx0XHRcdHNlYXJjaEZpZWxkOiAnYWJjJ1xuXHRcdH0pXG5cdH0pXG59KVxuXG5kZXNjcmliZSgncmVxdWVzdFJvYm90cycsICgpID0+IHtcblx0Y29uc3QgaW50aWFsU3RhdGVSb2JvdHMgPSB7XG5cdFx0cm9ib3RzOiBbXSxcblx0XHRpc1BlbmRpbmc6IHRydWVcblx0fVxuXG5cdGl0KCdpdCBzaG91bGQgcmV0dXJuIHRoZSBpbnRpYWwgc3RhdGUnLCAoKSA9Pntcblx0XHRleHBlY3QocmVkdWNlcnMucmVxdWVzdFJvYm90cyh1bmRlZmluZWQsIHt9KSlcblx0XHQudG9FcXVhbCh7aW50aWFsU3RhdGVSb2JvdHN9KVxuXHR9KVxufSlcdCJdfQ==