{"version":3,"sources":["Header.js"],"names":["Header","Component","shouldComponentUpdate","nextProps","nextState","render"],"mappings":";;;;;;;;;;;AAAA;;AACA;;;;AAEA;AACA;AACA;AACA;AAEA,MAAMA,MAAN,SAAqBC,gBAArB,CAA+B;AAE7BC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1C,WAAO,KAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,6BAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAb4B;;eAgBhBL,M","sourcesContent":["import React, {Component} from 'react';\nimport CounterButton from './CounterButton';\n\n// In most cases, instead of writing shouldComponentUpdate()\n// by hand, you can inherit from React.PureComponent. It is\n// equivalent to implementing shouldComponentUpdate() with a\n// shallow comparison of current and previous props and state.\n\nclass Header extends Component {\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return false\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className='f1'>RoboFriends</h1>\n        <CounterButton />\n      </div>\n    );\n  }\n}\n\nexport default Header;"]}